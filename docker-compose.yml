services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: restomap-postgres
    environment:
      POSTGRES_DB: RestoMapDb
      POSTGRES_USER: restomap
      POSTGRES_PASSWORD: restomap123
    ports:
      - "5430:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restomap-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restomap -d RestoMapDb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: restomap-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - restomap-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # .NET Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restomap-web
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__RestoMapDb=Host=postgres;Database=RestoMapDb;Username=restomap;Password=restomap123
      - Redis__ConnectionString=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - restomap-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  restomap-network:
    driver: bridge 